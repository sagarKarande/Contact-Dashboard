//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContactsAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ContactsDBEntities : DbContext
    {
        public ContactsDBEntities()
            : base("name=ContactsDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Contact> Contacts { get; set; }
    
        public virtual ObjectResult<GetContacts_Result> GetContacts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContacts_Result>("GetContacts");
        }
    
        public virtual int InsertUpdateDeleteContacts(Nullable<int> contact_id, string first_name, string last_name, string emailId, string phonenumber, string statementType, Nullable<bool> status)
        {
            var contact_idParameter = contact_id.HasValue ?
                new ObjectParameter("contact_id", contact_id) :
                new ObjectParameter("contact_id", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("emailId", emailId) :
                new ObjectParameter("emailId", typeof(string));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUpdateDeleteContacts", contact_idParameter, first_nameParameter, last_nameParameter, emailIdParameter, phonenumberParameter, statementTypeParameter, statusParameter);
        }
    }
}
